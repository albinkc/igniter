name: Test Projects
on:
  push:
    tags:
      - "v*"
    branches: [main, "3.0"]
jobs:
  test-projects:
    runs-on: ubuntu-latest
    name: Subproject ${{matrix.project.org}}/${{matrix.project.name}} - OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      fail-fast: false
      matrix:
        project: [
            { 
              org: "ash-project", 
              name: "ash", 
              test-cmd: "mix test --only igniter"
            }
          ]
        otp: ["27.2"]
        elixir: ["1.18.1"]
    steps:
      - uses: actions/checkout@v2
        with:
          repository: ${{matrix.project.org}}/${{matrix.project.name}}
          path: ${{matrix.project.name}}
          ref: ${{matrix.project.ref}}
      - run: sudo apt-get install --yes libssl-dev
      - uses: actions/checkout@v2
        with:
          repository: ash-project/igniter
          path: igniter
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
      - uses: actions/cache@v4
        id: cache-deps
        with:
          path: ${{matrix.project.name}}/deps
          key: ${{matrix.project.name}}-otp-${{matrix.otp}}-elixir-${{matrix.elixir}}-deps-2-${{ hashFiles('config/**/*.exs') }}-${{ hashFiles(format('{0}{1}', github.workspace, '/ash/mix.lock')) }}
          restore-keys: ${{matrix.project.name}}-otp-${{matrix.otp}}-elixir-${{matrix.elixir}}-deps-2-${{ hashFiles('config/**/*.exs') }}-
      - uses: actions/cache@v4
        id: cache-build
        with:
          path: ${{matrix.project.name}}/_build
          key: ${{matrix.project.name}}-otp-${{matrix.otp}}-elixir-${{matrix.elixir}}-build-3-${{ hashFiles('config/**/*.exs') }}-${{ hashFiles(format('{0}{1}', github.workspace, '/ash/mix.lock')) }}
          restore-keys: ${{matrix.project.name}}-otp-${{matrix.otp}}-elixir-${{matrix.elixir}}-build-3-${{ hashFiles('config/**/*.exs') }}-
      - name: mix deps.get inside ./${{matrix.project.name}}
        run: mix deps.get
        working-directory: ./${{matrix.project.name}}
      - name: ${{matrix.project.test-cmd}} inside ./${{matrix.project.name}}
        run: ${{matrix.project.test-cmd}}
        if: ${{matrix.project.test-cmd}}
        working-directory: ./${{matrix.project.name}}
      # - run: mix archive.install hex igniter_new --force
      #   if: ${{matrix.project.with}}
      # - run: mix archive.install hex phx_new --force
      #   if: ${{matrix.project.with}}
      # - run: mix igniter.new my_app --with ${{matrix.project.with}}
      #   if: ${{matrix.project.with}}
      # - run: mix deps.update igniter
      #   if: ${{matrix.project.with}}
      #   working-directory: my_app
      # - run: mix igniter.add igniter@path:../igniter --yes
      #   if: ${{matrix.project.with}}
      #   working-directory: my_app
      # - run: mix igniter.install ${{matrix.project.install}} ${{matrix.project.flags}} --yes
      #   if: ${{matrix.project.with}}
      #   working-directory: my_app
      # - run: mix compile --warnings-as-errors
      #   if: ${{matrix.project.with}}
      #   working-directory: my_app
